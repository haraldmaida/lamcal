
version: '0.1.0.{build}'

image: Visual Studio 2017

environment:
  matrix:
    - channel: stable
      target: x86_64-pc-windows-msvc
    - channel: stable
      target: i686-pc-windows-msvc
    - channel: beta
      target: x86_64-pc-windows-msvc
    - channel: beta
      target: i686-pc-windows-msvc
    - channel: nightly
      target: x86_64-pc-windows-msvc
      #cargoflags: --features "unstable"
    - channel: nightly
      target: i686-pc-windows-msvc
      #cargoflags: --features "unstable"
    - channel: stable
      target: x86_64-pc-windows-gnu
    - channel: stable
      target: i686-pc-windows-gnu
    - channel: beta
      target: x86_64-pc-windows-gnu
    - channel: beta
      target: i686-pc-windows-gnu
    - channel: nightly
      target: x86_64-pc-windows-gnu
      #cargoflags: --features "unstable"
    - channel: nightly
      target: i686-pc-windows-gnu
      #cargoflags: --features "unstable"

matrix:
  allow_failures:
    - channel: nightly

install:
  - ps: >-
      If ($Env:TARGET -eq 'x86_64-pc-windows-gnu') {
        $Env:PATH += ';C:\msys64\mingw64\bin'
      } ElseIf ($Env:TARGET -eq 'i686-pc-windows-gnu') {
        $Env:PATH += ';C:\msys64\mingw32\bin'
      }
  - appveyor DownloadFile https://win.rustup.rs/ -FileName rustup-init.exe
  - rustup-init -yv --default-toolchain %channel% --default-host %target%
  - set PATH=%PATH%;%USERPROFILE%\.cargo\bin
  - rustc -vV
  - cargo -vV
  - docker -v
  - docker-compose -v

build: false

test_script:
  - pwd
# currently no windows amd64 docker image available
#  - docker-compose up -d
  - cargo build --lib --all-features --verbose %cargoflags%
  - cargo test --lib --all-features --verbose %cargoflags%
  - cargo build --lib --verbose %cargoflags%
  - cargo test --lib --verbose %cargoflags%
# arangodb docker image not working on windows server 2016 
#  - cargo build --verbose %cargoflags%
#  - cargo test --verbose %cargoflags%
#  - docker-compose down
